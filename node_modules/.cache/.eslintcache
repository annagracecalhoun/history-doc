[{"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\index.js":"1","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\reportWebVitals.js":"2","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\App.js":"3","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\MainBod.js":"4","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\firebase.js":"5","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\Timeline.js":"6","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\Event.js":"7"},{"size":500,"mtime":1636393407405,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":418,"mtime":1636682454251,"results":"11","hashOfConfig":"9"},{"size":6963,"mtime":1637203375247,"results":"12","hashOfConfig":"9"},{"size":780,"mtime":1636427795175,"results":"13","hashOfConfig":"9"},{"size":5989,"mtime":1636939962182,"results":"14","hashOfConfig":"9"},{"size":1557,"mtime":1636861927564,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cfdieg",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\index.js",[],["34","35"],"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\reportWebVitals.js",[],"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\App.js",["36"],"import React from 'react'; \n// import other components \nimport MainBod from \"./Components/MainBod.js\";\n// import supporting packages \n// import {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\"; \n// import axios from \"axios\"\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <MainBod></MainBod>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\MainBod.js",[],"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\firebase.js",[],"C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\Timeline.js",["37","38","39","40"],"import React, {useState, useEffect} from \"react\"; \r\nimport Event from \"./Event.js\";\r\nimport \"../styles/Timeline.css\";\r\nimport firestore from \"../firebase.js\";\r\nimport {addDoc, getDocs, collection} from \"firebase/firestore/lite\";\r\n\r\n\r\nfunction Timeline(props) {\r\n\r\n    // set state for all elements of timeline\r\n    const [eventArr, seteventArr] = useState([]); \r\n    const [title, setTitle] = useState(props.title);\r\n    const [showNew, setshowNew] = useState(false);\r\n\r\n    // new event fields \r\n    const [newTitle, setNewTitle] = useState(\"\"); \r\n    const [newContent, setNewContent] = useState(\"\");\r\n    const [newSource, setNewSource] = useState(\"\");\r\n    const [newDate, setNewDate] = useState(\"\"); \r\n    const [newTags, setNewTags] = useState(\"\");\r\n    const [newSourceText, setNewSourceText] = useState(\"\");\r\n    const [newTimeline, setNewTimeline] = useState(\"\");\r\n\r\n    const changeTitle = (e) => {\r\n        setNewTitle(e.target.value); \r\n    }; \r\n\r\n    const changeTags = (e) => {\r\n        setNewTags(e.target.value); \r\n    }; \r\n\r\n    const changeDate = (e) => {\r\n        setNewDate(e.target.value); \r\n    }; \r\n\r\n    const changeSourceText = (e) => {\r\n        setNewSourceText(e.target.value); \r\n    }; \r\n\r\n    const changeSource = (e) => {\r\n        setNewSource(e.target.value); \r\n    }; \r\n\r\n    const changeContent = (e) => {\r\n        setNewContent(e.target.value); \r\n    }; \r\n\r\n    // fetch all event data items \r\n    // pass timeline ID in from timeline component \r\n    useEffect(() => {\r\n        let allEvents = collection(firestore, \"events\"); \r\n            getDocs(allEvents).then(snapshot => {       // snapshot is array of all documents\r\n                let tempEvents = []; \r\n                snapshot.forEach(document => {\r\n                    if (document.data().timeline === props.timeId){ \r\n                    tempEvents.push(document.data())} \r\n                }); \r\n    \r\n            seteventArr(tempEvents.sort(sortByDate))        // set initial state of eventArr\r\n            // eventArr.sort(sortByDate);\r\n            }); \r\n        }, []); \r\n\r\n\r\n    const createEvent = () => {\r\n        if (newTitle.length > 0 && newContent.length >0) {\r\n            console.log(eventArr)\r\n            const newArr2 = ([...eventArr, {title: newTitle, content: newContent, source: newSource, sourceText: newSourceText, date: newDate, tags: newTags}])\r\n            seteventArr(newArr2.sort(sortByDate)); \r\n            console.log(eventArr)\r\n            const docRef = addDoc(collection(firestore, \"events\"), {\r\n                title: newTitle, content: newContent, \r\n                source: newSource, sourceText: newSourceText, \r\n                date: newDate, tags: newTags, timeline: props.timeId\r\n            })\r\n            setNewTimeline(docRef.id);\r\n            setshowNew(false); \r\n            setNewTitle(\"\"); \r\n            setNewContent(\"\"); \r\n            setNewDate(\"\"); \r\n            setNewSource(\"\"); \r\n            setNewSourceText(\"\"); \r\n            setNewTags(\"\"); \r\n        }\r\n    }; \r\n\r\n    const sortByDate = (a, b) => {\r\n        var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const a1 = a.date.split(' ');\r\n        const b1 = b.date.split(' '); \r\n        if (parseInt(a1[a1.length-1]) > parseInt(b1[b1.length-1])) {\r\n            return -1; \r\n        }\r\n        if (parseInt(a1[a1.length-1]) < parseInt(b1[b1.length-1])) {\r\n            return 1; \r\n        }\r\n        if (a1.length === 3 && b1.length === 3 &&  a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) > parseInt(b1[1].replace(',', ''))) {\r\n            return -1; \r\n        }\r\n        if (a1.length === 3 && b1.length === 3 &&  a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) < parseInt(b1[1].replace(',', ''))) {\r\n            return 1; \r\n        }\r\n        if (a1[0] === b1[0]) {\r\n            return -1; \r\n        }\r\n        else {\r\n            return months.indexOf(b1[0]) - months.indexOf(a1[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"timelineBox\">\r\n            <div className = \"genInfo2\">\r\n                <div className='timeTitles'>\r\n        <span className = \"timelineTitle\">{props.title}</span>\r\n        <span className =\"timeSubtitle\">{props.subtitle}</span>\r\n        </div>\r\n        <button onClick={() => setshowNew(!showNew)} className = 'createBut'>Add an event</button>\r\n        </div>\r\n        {\r\n            showNew ?<div className = \"floatCen\"> <div className = \"newEvent\">\r\n            <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"event name\" type=\"text\" value={newTitle} onChange={changeTitle}/>\r\n                 <input className= \"eventInput\" placeholder = \"event date\" type=\"text\" value={newDate} onChange={changeDate}/> </div> \r\n                 <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"source link\" type=\"text\" value={newSource} onChange={changeSource}/>\r\n                 <input className= \"eventInput\" placeholder = \"source name\" type=\"text\" value={newSourceText} onChange={changeSourceText}/>\r\n                 </div> <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"tags (comma separated)\" type=\"text\" value={newTags} onChange={changeTags}/>\r\n                 <input className= \"eventInput\" placeholder = \"event content\" type=\"text\" value={newContent} onChange={changeContent}/> </div>\r\n                 <div className = \"inputSec\">\r\n                     <button onClick={createEvent} className = \"createBut2\">Create New Event</button>\r\n                 </div>\r\n            </div></div> : null\r\n        }\r\n        <div className = \"eventBar\">\r\n       {eventArr.map((x, i) => \r\n        <Event key={i} title = {x.title} content ={x.content} source={x.source} sourceText={x.sourceText} date={x.date} tags={x.tags}></Event>)}\r\n     </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Timeline; ","C:\\Users\\annag\\Dropbox\\Fall 2021\\Source\\history-doc\\history-doc\\src\\Components\\Event.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54"],"import React, {useState, useEffect} from \"react\"; \r\nimport \"../styles/Event.css\";\r\n//import firestore from \"../firebase\";\r\n//import {collection} from \"firebase/firestore/lite\";\r\n\r\nfunction Event(props) {\r\n    // create states for all event info \r\n    const [title, setTitle] = useState(props.title); \r\n    const [content, setContent] = useState(props.content);\r\n    const [source, setSource] = useState(props.source);\r\n    const [date, setDate] = useState(props.date); \r\n    const [tags, setTags] = useState(props.tags);\r\n    const [sourceText, setSourceText] = useState(props.sourceText);\r\n    const [timeline, setTimeline] = useState(props.timeline);\r\n    // make tags into an array and then create bubble for each one  \r\n    const allTags = tags.split(', ')\r\n\r\n    return (\r\n        <div className = \"eventBox\">\r\n            <div className = \"genInfo\">\r\n            <span className = \"eventTitle\">{props.title}</span>\r\n            <span className = \"eventDate\">{props.date}</span>\r\n            </div>\r\n            <div className = \"allInfo\">\r\n            <div className = \"innerBox\">\r\n                <div className = \"contDiv\">\r\n            <span className = \"eventContent\">{props.content}</span>\r\n            </div>\r\n            <div className = \"bottomInfo\">\r\n            <a href={props.source} className = \"eventSource\">{props.sourceText}</a>\r\n         <div>  {allTags.map((x, i) => \r\n        <span key={i} className = \"eventTags\">{x}</span>)}</div> \r\n            </div>\r\n            </div></div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Event; ",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":12,"column":12,"nodeType":"61","messageId":"62","endLine":12,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":12,"column":19,"nodeType":"61","messageId":"62","endLine":12,"endColumn":27},{"ruleId":"59","severity":1,"message":"65","line":22,"column":12,"nodeType":"61","messageId":"62","endLine":22,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":62,"column":12,"nodeType":"68","endLine":62,"endColumn":14,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":1,"column":26,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"63","line":8,"column":12,"nodeType":"61","messageId":"62","endLine":8,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":8,"column":19,"nodeType":"61","messageId":"62","endLine":8,"endColumn":27},{"ruleId":"59","severity":1,"message":"71","line":9,"column":12,"nodeType":"61","messageId":"62","endLine":9,"endColumn":19},{"ruleId":"59","severity":1,"message":"72","line":9,"column":21,"nodeType":"61","messageId":"62","endLine":9,"endColumn":31},{"ruleId":"59","severity":1,"message":"73","line":10,"column":12,"nodeType":"61","messageId":"62","endLine":10,"endColumn":18},{"ruleId":"59","severity":1,"message":"74","line":10,"column":20,"nodeType":"61","messageId":"62","endLine":10,"endColumn":29},{"ruleId":"59","severity":1,"message":"75","line":11,"column":12,"nodeType":"61","messageId":"62","endLine":11,"endColumn":16},{"ruleId":"59","severity":1,"message":"76","line":11,"column":18,"nodeType":"61","messageId":"62","endLine":11,"endColumn":25},{"ruleId":"59","severity":1,"message":"77","line":12,"column":18,"nodeType":"61","messageId":"62","endLine":12,"endColumn":25},{"ruleId":"59","severity":1,"message":"78","line":13,"column":12,"nodeType":"61","messageId":"62","endLine":13,"endColumn":22},{"ruleId":"59","severity":1,"message":"79","line":13,"column":24,"nodeType":"61","messageId":"62","endLine":13,"endColumn":37},{"ruleId":"59","severity":1,"message":"80","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":20},{"ruleId":"59","severity":1,"message":"81","line":14,"column":22,"nodeType":"61","messageId":"62","endLine":14,"endColumn":33},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'newTimeline' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.timeId'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useEffect' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'source' is assigned a value but never used.","'setSource' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setTags' is assigned a value but never used.","'sourceText' is assigned a value but never used.","'setSourceText' is assigned a value but never used.","'timeline' is assigned a value but never used.","'setTimeline' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [props.timeId]",{"range":"87","text":"88"},[2065,2067],"[props.timeId]"]