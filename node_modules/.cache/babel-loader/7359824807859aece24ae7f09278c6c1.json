{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annag\\\\Dropbox\\\\Fall 2021\\\\Source\\\\history-doc\\\\history-doc\\\\src\\\\Components\\\\Event.js\";\nimport React from \"react\";\nimport \"../styles/Event.css\"; //import firestore from \"../firebase\";\n//import {collection} from \"firebase/firestore/lite\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Event(props) {\n  // create states for all event info \n  const tags = props.tags; // make tags into an array and then create bubble for each one  \n\n  const allTags = tags.split(', ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"eventTitle\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"eventDate\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"eventContent\",\n            children: props.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.source,\n            className: \"eventSource\",\n            children: props.sourceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", allTags.map((x, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eventTags\",\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Event;\nexport default Event;\n\nvar _c;\n\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"sources":["C:/Users/annag/Dropbox/Fall 2021/Source/history-doc/history-doc/src/Components/Event.js"],"names":["React","Event","props","tags","allTags","split","title","date","content","source","sourceText","map","x","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CACA;AACA;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB;AACA,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB,CAFkB,CAIlB;;AACA,QAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAhB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACA;AAAM,QAAA,SAAS,EAAG,YAAlB;AAAA,kBAAgCH,KAAK,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAG,WAAlB;AAAA,kBAA+BJ,KAAK,CAACK;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,6BACA;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,iCACJ;AAAM,YAAA,SAAS,EAAG,cAAlB;AAAA,sBAAkCL,KAAK,CAACM;AAAxC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIA;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,kCACA;AAAG,YAAA,IAAI,EAAEN,KAAK,CAACO,MAAf;AAAuB,YAAA,SAAS,EAAG,aAAnC;AAAA,sBAAkDP,KAAK,CAACQ;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEH;AAAA,6BAAQN,OAAO,CAACO,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,kBACrB;AAAc,cAAA,SAAS,EAAG,WAA1B;AAAA,wBAAuCD;AAAvC,eAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,oBADS,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KA1BQZ,K;AA4BT,eAAeA,KAAf","sourcesContent":["import React from \"react\"; \r\nimport \"../styles/Event.css\";\r\n//import firestore from \"../firebase\";\r\n//import {collection} from \"firebase/firestore/lite\";\r\n\r\nfunction Event(props) {\r\n    // create states for all event info \r\n    const tags = props.tags; \r\n\r\n    // make tags into an array and then create bubble for each one  \r\n    const allTags = tags.split(', ')\r\n\r\n    return (\r\n        <div className = \"eventBox\">\r\n            <div className = \"genInfo\">\r\n            <span className = \"eventTitle\">{props.title}</span>\r\n            <span className = \"eventDate\">{props.date}</span>\r\n            </div>\r\n            <div className = \"allInfo\">\r\n            <div className = \"innerBox\">\r\n                <div className = \"contDiv\">\r\n            <span className = \"eventContent\">{props.content}</span>\r\n            </div>\r\n            <div className = \"bottomInfo\">\r\n            <a href={props.source} className = \"eventSource\">{props.sourceText}</a>\r\n         <div>  {allTags.map((x, i) => \r\n        <span key={i} className = \"eventTags\">{x}</span>)}</div> \r\n            </div>\r\n            </div></div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Event; "]},"metadata":{},"sourceType":"module"}