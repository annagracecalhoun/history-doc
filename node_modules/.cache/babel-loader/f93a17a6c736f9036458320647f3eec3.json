{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annag\\\\Dropbox\\\\Fall 2021\\\\Source\\\\history-doc\\\\history-doc\\\\src\\\\Components\\\\Timeline.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Event from \"./Event.js\";\nimport \"../styles/Timeline.css\";\nimport firestore from \"../firebase.js\";\nimport { addDoc, getDocs, collection } from \"firebase/firestore/lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timeline(props) {\n  _s();\n\n  // set state for all elements of timeline\n  const [eventArr, seteventArr] = useState([]);\n  const [title, setTitle] = useState(props.title);\n  const [showNew, setshowNew] = useState(false); // new event fields \n\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newSource, setNewSource] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [newTags, setNewTags] = useState(\"\");\n  const [newSourceText, setNewSourceText] = useState(\"\");\n  const [newTimeline, setNewTimeline] = useState(\"\");\n\n  const changeTitle = e => {\n    setNewTitle(e.target.value);\n  };\n\n  const changeTags = e => {\n    setNewTags(e.target.value);\n  };\n\n  const changeDate = e => {\n    setNewDate(e.target.value);\n  };\n\n  const changeSourceText = e => {\n    setNewSourceText(e.target.value);\n  };\n\n  const changeSource = e => {\n    setNewSource(e.target.value);\n  };\n\n  const changeContent = e => {\n    setNewContent(e.target.value);\n  }; // fetch all event data items \n  // pass timeline ID in from timeline component \n\n\n  useEffect(() => {\n    let allEvents = collection(firestore, \"events\");\n    getDocs(allEvents).then(snapshot => {\n      // snapshot is array of all documents\n      let tempEvents = [];\n      snapshot.forEach(document => {\n        if (document.data().timeline === props.timeId) {\n          tempEvents.push(document.data());\n        }\n      });\n      seteventArr(tempEvents.sort(sortByDate)); // set initial state of eventArr\n      // eventArr.sort(sortByDate);\n    });\n  }, []);\n\n  const createEvent = () => {\n    if (newTitle.length > 0 && newContent.length > 0) {\n      console.log(eventArr);\n      const newArr2 = [...eventArr, {\n        title: newTitle,\n        content: newContent,\n        source: newSource,\n        sourceText: newSourceText,\n        date: newDate,\n        tags: newTags\n      }];\n      seteventArr(newArr2.sort(sortByDate));\n      console.log(eventArr);\n      const docRef = addDoc(collection(firestore, \"events\"), {\n        title: newTitle,\n        content: newContent,\n        source: newSource,\n        sourceText: newSourceText,\n        date: newDate,\n        tags: newTags,\n        timeline: props.timeId\n      });\n      setNewTimeline(docRef.id);\n      setshowNew(false);\n      setNewTitle(\"\");\n      setNewContent(\"\");\n      setNewDate(\"\");\n      setNewSource(\"\");\n      setNewSourceText(\"\");\n      setNewTags(\"\");\n    }\n  };\n\n  const sortByDate = (a, b) => {\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const a1 = a.date.split(' ');\n    const b1 = b.date.split(' ');\n\n    if (parseInt(a1[a1.length - 1]) > parseInt(b1[b1.length - 1])) {\n      return -1;\n    }\n\n    if (parseInt(a1[a1.length - 1]) < parseInt(b1[b1.length - 1])) {\n      return 1;\n    }\n\n    if (a1.length === 3 && b1.length === 3 && a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) > parseInt(b1[1].replace(',', ''))) {\n      return -1;\n    }\n\n    if (a1.length === 3 && b1.length === 3 && a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) < parseInt(b1[1].replace(',', ''))) {\n      return 1;\n    }\n\n    if (a1[0] === b1[0]) {\n      return -1;\n    } else {\n      return months.indexOf(b1[0]) - months.indexOf(a1[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timelineBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genInfo2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeTitles\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timelineTitle\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timeSubtitle\",\n          children: props.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setshowNew(!showNew),\n        className: \"createBut\",\n        children: \"Add an event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), showNew ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floatCen\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newEvent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputSec\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"event name\",\n            type: \"text\",\n            value: newTitle,\n            onChange: changeTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"event date\",\n            type: \"text\",\n            value: newDate,\n            onChange: changeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputSec\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"source link\",\n            type: \"text\",\n            value: newSource,\n            onChange: changeSource\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"source name\",\n            type: \"text\",\n            value: newSourceText,\n            onChange: changeSourceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 18\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputSec\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"tags (comma separated)\",\n            type: \"text\",\n            value: newTags,\n            onChange: changeTags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"eventInput\",\n            placeholder: \"event content\",\n            type: \"text\",\n            value: newContent,\n            onChange: changeContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputSec\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createEvent,\n            className: \"createBut2\",\n            children: \"Create New Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventBar\",\n      children: eventArr.map((x, i) => /*#__PURE__*/_jsxDEV(Event, {\n        title: x.title,\n        content: x.content,\n        source: x.source,\n        sourceText: x.sourceText,\n        date: x.date,\n        tags: x.tags\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timeline, \"bWrud/ehJnWexwFOcniLUdgiCp8=\");\n\n_c = Timeline;\nexport default Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["C:/Users/annag/Dropbox/Fall 2021/Source/history-doc/history-doc/src/Components/Timeline.js"],"names":["React","useState","useEffect","Event","firestore","addDoc","getDocs","collection","Timeline","props","eventArr","seteventArr","title","setTitle","showNew","setshowNew","newTitle","setNewTitle","newContent","setNewContent","newSource","setNewSource","newDate","setNewDate","newTags","setNewTags","newSourceText","setNewSourceText","newTimeline","setNewTimeline","changeTitle","e","target","value","changeTags","changeDate","changeSourceText","changeSource","changeContent","allEvents","then","snapshot","tempEvents","forEach","document","data","timeline","timeId","push","sort","sortByDate","createEvent","length","console","log","newArr2","content","source","sourceText","date","tags","docRef","id","a","b","months","a1","split","b1","parseInt","replace","indexOf","subtitle","map","x","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"; \r\nimport Event from \"./Event.js\";\r\nimport \"../styles/Timeline.css\";\r\nimport firestore from \"../firebase.js\";\r\nimport {addDoc, getDocs, collection} from \"firebase/firestore/lite\";\r\n\r\n\r\nfunction Timeline(props) {\r\n\r\n    // set state for all elements of timeline\r\n    const [eventArr, seteventArr] = useState([]); \r\n    const [title, setTitle] = useState(props.title);\r\n    const [showNew, setshowNew] = useState(false);\r\n\r\n    // new event fields \r\n    const [newTitle, setNewTitle] = useState(\"\"); \r\n    const [newContent, setNewContent] = useState(\"\");\r\n    const [newSource, setNewSource] = useState(\"\");\r\n    const [newDate, setNewDate] = useState(\"\"); \r\n    const [newTags, setNewTags] = useState(\"\");\r\n    const [newSourceText, setNewSourceText] = useState(\"\");\r\n    const [newTimeline, setNewTimeline] = useState(\"\");\r\n\r\n    const changeTitle = (e) => {\r\n        setNewTitle(e.target.value); \r\n    }; \r\n\r\n    const changeTags = (e) => {\r\n        setNewTags(e.target.value); \r\n    }; \r\n\r\n    const changeDate = (e) => {\r\n        setNewDate(e.target.value); \r\n    }; \r\n\r\n    const changeSourceText = (e) => {\r\n        setNewSourceText(e.target.value); \r\n    }; \r\n\r\n    const changeSource = (e) => {\r\n        setNewSource(e.target.value); \r\n    }; \r\n\r\n    const changeContent = (e) => {\r\n        setNewContent(e.target.value); \r\n    }; \r\n\r\n    // fetch all event data items \r\n    // pass timeline ID in from timeline component \r\n    useEffect(() => {\r\n        let allEvents = collection(firestore, \"events\"); \r\n            getDocs(allEvents).then(snapshot => {       // snapshot is array of all documents\r\n                let tempEvents = []; \r\n                snapshot.forEach(document => {\r\n                    if (document.data().timeline === props.timeId){ \r\n                    tempEvents.push(document.data())} \r\n                }); \r\n    \r\n            seteventArr(tempEvents.sort(sortByDate))        // set initial state of eventArr\r\n            // eventArr.sort(sortByDate);\r\n            }); \r\n        }, []); \r\n\r\n\r\n    const createEvent = () => {\r\n        if (newTitle.length > 0 && newContent.length >0) {\r\n            console.log(eventArr)\r\n            const newArr2 = ([...eventArr, {title: newTitle, content: newContent, source: newSource, sourceText: newSourceText, date: newDate, tags: newTags}])\r\n            seteventArr(newArr2.sort(sortByDate)); \r\n            console.log(eventArr)\r\n            const docRef = addDoc(collection(firestore, \"events\"), {\r\n                title: newTitle, content: newContent, \r\n                source: newSource, sourceText: newSourceText, \r\n                date: newDate, tags: newTags, timeline: props.timeId\r\n            })\r\n            setNewTimeline(docRef.id);\r\n            setshowNew(false); \r\n            setNewTitle(\"\"); \r\n            setNewContent(\"\"); \r\n            setNewDate(\"\"); \r\n            setNewSource(\"\"); \r\n            setNewSourceText(\"\"); \r\n            setNewTags(\"\"); \r\n        }\r\n    }; \r\n\r\n    const sortByDate = (a, b) => {\r\n        var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        const a1 = a.date.split(' ');\r\n        const b1 = b.date.split(' '); \r\n        if (parseInt(a1[a1.length-1]) > parseInt(b1[b1.length-1])) {\r\n            return -1; \r\n        }\r\n        if (parseInt(a1[a1.length-1]) < parseInt(b1[b1.length-1])) {\r\n            return 1; \r\n        }\r\n        if (a1.length === 3 && b1.length === 3 &&  a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) > parseInt(b1[1].replace(',', ''))) {\r\n            return -1; \r\n        }\r\n        if (a1.length === 3 && b1.length === 3 &&  a1[0] === b1[0] && parseInt(a1[1].replace(',', '')) < parseInt(b1[1].replace(',', ''))) {\r\n            return 1; \r\n        }\r\n        if (a1[0] === b1[0]) {\r\n            return -1; \r\n        }\r\n        else {\r\n            return months.indexOf(b1[0]) - months.indexOf(a1[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"timelineBox\">\r\n            <div className = \"genInfo2\">\r\n                <div className='timeTitles'>\r\n        <span className = \"timelineTitle\">{props.title}</span>\r\n        <span className =\"timeSubtitle\">{props.subtitle}</span>\r\n        </div>\r\n        <button onClick={() => setshowNew(!showNew)} className = 'createBut'>Add an event</button>\r\n        </div>\r\n        {\r\n            showNew ?<div className = \"floatCen\"> <div className = \"newEvent\">\r\n            <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"event name\" type=\"text\" value={newTitle} onChange={changeTitle}/>\r\n                 <input className= \"eventInput\" placeholder = \"event date\" type=\"text\" value={newDate} onChange={changeDate}/> </div> \r\n                 <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"source link\" type=\"text\" value={newSource} onChange={changeSource}/>\r\n                 <input className= \"eventInput\" placeholder = \"source name\" type=\"text\" value={newSourceText} onChange={changeSourceText}/>\r\n                 </div> <div className = \"inputSec\">\r\n                 <input className= \"eventInput\" placeholder = \"tags (comma separated)\" type=\"text\" value={newTags} onChange={changeTags}/>\r\n                 <input className= \"eventInput\" placeholder = \"event content\" type=\"text\" value={newContent} onChange={changeContent}/> </div>\r\n                 <div className = \"inputSec\">\r\n                     <button onClick={createEvent} className = \"createBut2\">Create New Event</button>\r\n                 </div>\r\n            </div></div> : null\r\n        }\r\n        <div className = \"eventBar\">\r\n       {eventArr.map((x, i) => \r\n        <Event key={i} title = {x.title} content ={x.content} source={x.source} sourceText={x.sourceText} date={x.date} tags={x.tags}></Event>)}\r\n     </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Timeline; "]},"metadata":{},"sourceType":"module"}