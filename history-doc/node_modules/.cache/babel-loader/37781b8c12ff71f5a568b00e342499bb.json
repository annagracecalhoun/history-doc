{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annag\\\\Dropbox\\\\Fall 2021\\\\Source\\\\history-doc\\\\history-doc\\\\src\\\\Components\\\\Event.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Event.css\"; //import firestore from \"../firebase\";\n//import {collection} from \"firebase/firestore/lite\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Event(props) {\n  _s();\n\n  // create states for all event info \n  const [title, setTitle] = useState(props.title);\n  const [content, setContent] = useState(props.content);\n  const [source, setSource] = useState(props.source);\n  const [date, setDate] = useState(props.date);\n  const [tags, setTags] = useState(props.tags);\n  const [sourceText, setSourceText] = useState(props.sourceText);\n  const [timeline, setTimeline] = useState(props.timeline); // make tags into an array and then create bubble for each one  \n\n  const allTags = tags.split(', ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"eventTitle\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"eventDate\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"eventContent\",\n            children: props.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottomInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.source,\n            className: \"eventSource\",\n            children: props.sourceText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"  \", allTags.map((x, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"eventTags\",\n              children: x\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 9\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Event, \"3XdsQrdLvksAFdyqhSy3591bVqA=\");\n\n_c = Event;\nexport default Event;\n\nvar _c;\n\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"sources":["C:/Users/annag/Dropbox/Fall 2021/Source/history-doc/history-doc/src/Components/Event.js"],"names":["React","useState","useEffect","Event","props","title","setTitle","content","setContent","source","setSource","date","setDate","tags","setTags","sourceText","setSourceText","timeline","setTimeline","allTags","split","map","x","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,qBAAP,C,CACA;AACA;;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACG,KAAK,CAACG,OAAP,CAAtC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACG,KAAK,CAACK,MAAP,CAApC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACG,KAAK,CAACO,IAAP,CAAhC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACG,KAAK,CAACS,IAAP,CAAhC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAACG,KAAK,CAACW,UAAP,CAA5C;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACG,KAAK,CAACa,QAAP,CAAxC,CARkB,CASlB;;AACA,QAAME,OAAO,GAAGN,IAAI,CAACO,KAAL,CAAW,IAAX,CAAhB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACA;AAAM,QAAA,SAAS,EAAG,YAAlB;AAAA,kBAAgChB,KAAK,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,SAAS,EAAG,WAAlB;AAAA,kBAA+BD,KAAK,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,6BACA;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,iCACJ;AAAM,YAAA,SAAS,EAAG,cAAlB;AAAA,sBAAkCP,KAAK,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAIA;AAAK,UAAA,SAAS,EAAG,YAAjB;AAAA,kCACA;AAAG,YAAA,IAAI,EAAEH,KAAK,CAACK,MAAf;AAAuB,YAAA,SAAS,EAAG,aAAnC;AAAA,sBAAkDL,KAAK,CAACW;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADA,eAEH;AAAA,6BAAQI,OAAO,CAACE,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,kBACrB;AAAc,cAAA,SAAS,EAAG,WAA1B;AAAA,wBAAuCD;AAAvC,eAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,oBADS,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA/BQpB,K;;KAAAA,K;AAiCT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"; \r\nimport \"../styles/Event.css\";\r\n//import firestore from \"../firebase\";\r\n//import {collection} from \"firebase/firestore/lite\";\r\n\r\nfunction Event(props) {\r\n    // create states for all event info \r\n    const [title, setTitle] = useState(props.title); \r\n    const [content, setContent] = useState(props.content);\r\n    const [source, setSource] = useState(props.source);\r\n    const [date, setDate] = useState(props.date); \r\n    const [tags, setTags] = useState(props.tags);\r\n    const [sourceText, setSourceText] = useState(props.sourceText);\r\n    const [timeline, setTimeline] = useState(props.timeline);\r\n    // make tags into an array and then create bubble for each one  \r\n    const allTags = tags.split(', ')\r\n\r\n    return (\r\n        <div className = \"eventBox\">\r\n            <div className = \"genInfo\">\r\n            <span className = \"eventTitle\">{props.title}</span>\r\n            <span className = \"eventDate\">{props.date}</span>\r\n            </div>\r\n            <div className = \"allInfo\">\r\n            <div className = \"innerBox\">\r\n                <div className = \"contDiv\">\r\n            <span className = \"eventContent\">{props.content}</span>\r\n            </div>\r\n            <div className = \"bottomInfo\">\r\n            <a href={props.source} className = \"eventSource\">{props.sourceText}</a>\r\n         <div>  {allTags.map((x, i) => \r\n        <span key={i} className = \"eventTags\">{x}</span>)}</div> \r\n            </div>\r\n            </div></div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default Event; "]},"metadata":{},"sourceType":"module"}